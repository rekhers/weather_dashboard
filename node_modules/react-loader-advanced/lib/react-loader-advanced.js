'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');

var _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);

var _events = require('events');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-template, quote-props */
function uid() {
  return Math.random().toString(36).substr(2, 9);
}

var backgroundDefaultStyle = {
  display: 'block',
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  backgroundColor: 'rgba(0,0,0,0.5)',
  zIndex: 10
};

var foregroundDefaultStyle = {
  display: 'table',
  width: '100%',
  height: '100%',
  textAlign: 'center',
  zIndex: 20,
  color: 'white'
};

var messageDefaultStyle = {
  display: 'table-cell',
  verticalAlign: 'middle'
};

var loaderStack = (0, _extends3.default)({}, _events.EventEmitter.prototype, {

  stack: [],

  addLoader: function addLoader(id) {
    var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (this.getIndex(id) === -1) {
      this.stack.push({ id: id, priority: priority });
      this.emitChange();
    }
  },
  removeLoader: function removeLoader(id) {
    if (this.getIndex(id) !== -1) {
      this.stack.splice(this.getIndex(id), 1);
      this.emitChange();
    }
  },
  getIndex: function getIndex(id) {
    return this.stack.findIndex(function (loader) {
      return loader.id === id;
    });
  },
  getMaxPriority: function getMaxPriority() {
    var max = 0;

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3.default)(this.stack), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var value = _step.value;

        if (value.priority > max) {
          max = value.priority;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return max;
  },
  emitChange: function emitChange() {
    this.emit('change');
  },
  addChangeListener: function addChangeListener(callback) {
    this.on('change', callback);
  },
  removeChangeListener: function removeChangeListener(callback) {
    this.removeListener('change', callback);
  }
});

var Loader = function (_Component) {
  (0, _inherits3.default)(Loader, _Component);

  function Loader() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Loader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Loader.__proto__ || (0, _getPrototypeOf2.default)(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      active: false
    }, _this.onStackChange = function () {
      // if (this.isMounted()) {
      _this.setState({
        active: loaderStack.getMaxPriority() === _this.props.priority
      });
      // }
    }, _this.initialize = function (props) {
      if (props.show) {
        loaderStack.addLoader(_this._stackId, props.priority);
      } else {
        loaderStack.removeLoader(_this._stackId);
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Loader, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._stackId = uid();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      loaderStack.addChangeListener(this.onStackChange);
      this.initialize(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.initialize(nextProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _this2 = this;

      loaderStack.removeChangeListener(this.onStackChange);

      // Bugfix: 3.3.2016
      // setTimeout fixes rare bug with React 0.13 that is caused by unpredictable
      // component lifecycle (Uncaught Error: Invariant Violation:
      // must be mounted to trap events).
      setTimeout(function () {
        loaderStack.removeLoader(_this2._stackId);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          backgroundStyle = _props.backgroundStyle,
          children = _props.children,
          className = _props.className,
          contentBlur = _props.contentBlur,
          contentStyle = _props.contentStyle,
          disableDefaultStyles = _props.disableDefaultStyles,
          foregroundStyle = _props.foregroundStyle,
          hideContentOnLoad = _props.hideContentOnLoad,
          message = _props.message,
          messageStyle = _props.messageStyle,
          style = _props.style,
          show = _props.show,
          transitionConfig = _props.transitionConfig;
      var active = this.state.active;


      var shouldShowLoader = !!active && !!show;

      var bgStyle = (0, _extends3.default)({}, disableDefaultStyles ? {} : backgroundDefaultStyle, backgroundStyle);

      var fgStyle = (0, _extends3.default)({}, disableDefaultStyles ? {} : foregroundDefaultStyle, foregroundStyle);

      var msgStyle = (0, _extends3.default)({}, disableDefaultStyles ? {} : messageDefaultStyle, messageStyle);

      var loaderStyle = (0, _extends3.default)({ position: 'relative' }, style);

      var finalContentStyle = (0, _assign2.default)(shouldShowLoader && contentBlur ? {
        'WebkitFilter': 'blur(' + contentBlur + 'px)',
        'MozFilter': 'blur(' + contentBlur + 'px)',
        'OFilter': 'blur(' + contentBlur + 'px)',
        'msFilter': 'blur(' + contentBlur + 'px)',
        'filter': 'blur(' + contentBlur + 'px)'
      } : {}, contentStyle, {
        opacity: hideContentOnLoad && show ? 0 : 1
      });

      var classes = 'Loader' + (!!className ? ' ' + className : '');

      var loaderElement = !!shouldShowLoader && _react2.default.createElement(
        'div',
        { className: 'Loader__background', style: bgStyle },
        _react2.default.createElement(
          'div',
          { className: 'Loader__foreground', style: fgStyle },
          _react2.default.createElement(
            'div',
            { className: 'Loader__message', style: msgStyle },
            message
          )
        )
      );

      return _react2.default.createElement(
        'div',
        { className: classes, style: loaderStyle },
        _react2.default.createElement(
          'div',
          { className: 'Loader__content', style: finalContentStyle },
          children
        ),
        !!transitionConfig ? _react2.default.createElement(
          _CSSTransitionGroup2.default,
          transitionConfig,
          loaderElement
        ) : loaderElement
      );
    }
  }]);
  return Loader;
}(_react.Component);

Loader.propTypes = {
  backgroundStyle: _propTypes2.default.object,

  children: _propTypes2.default.node,

  className: _propTypes2.default.string,

  // blur loader content while loading
  contentBlur: _propTypes2.default.number,

  contentStyle: _propTypes2.default.object,

  // disables all default styles if true
  disableDefaultStyles: _propTypes2.default.bool,

  foregroundStyle: _propTypes2.default.object,

  hideContentOnLoad: _propTypes2.default.bool,

  // loader message or element
  message: _propTypes2.default.node,

  messageStyle: _propTypes2.default.object,

  // stack priority
  priority: _propTypes2.default.number,

  show: _propTypes2.default.bool.isRequired,

  style: _propTypes2.default.object,

  transitionConfig: _propTypes2.default.shape({
    transitionName: _propTypes2.default.string.isRequired,
    transitionEnterTimeout: _propTypes2.default.number.isRequired,
    transitionLeaveTimeout: _propTypes2.default.number.isRequired
  })
};
Loader.defaultProps = {
  message: 'loading...',
  priority: 0
};
exports.default = Loader;